name: Generate Changelog

on:
  push:
    branches: *
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.0.0)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  changelog:
    name: Generate and Update Changelog
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-changelog]')"
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm install -g conventional-changelog-cli
          npm install -g standard-version

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get Previous Tag
        id: previous-tag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "previous-tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
          echo "Previous tag: $PREVIOUS_TAG"

      - name: Generate Changelog
        run: |
          if [ -z "${{ steps.previous-tag.outputs.previous-tag }}" ]; then
            echo "Génération du changelog initial..."
            conventional-changelog -p angular -i CHANGELOG.md -s -r 0 --config .github/changelog-config.js
          else
            echo "Mise à jour du changelog depuis ${{ steps.previous-tag.outputs.previous-tag }}..."
            conventional-changelog -p angular -i CHANGELOG.md -s --config .github/changelog-config.js
          fi

      - name: Check for Changes
        id: changes
        run: |
          if git diff --quiet CHANGELOG.md; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "Aucun changement détecté dans le changelog"
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Changements détectés dans le changelog"
          fi

      - name: Update README Badge
        if: steps.changes.outputs.has-changes == 'true'
        run: |
          CURRENT_DATE=$(date +'%Y-%m-%d')
          if grep -q "Dernière mise à jour" README.md; then
            sed -i "s/Dernière mise à jour-[0-9]*-[0-9]*-[0-9]*/Dernière mise à jour-${CURRENT_DATE}/g" README.md
          else
            sed -i '/^<\/div>$/a\\n![Dernière mise à jour](https://img.shields.io/badge/Dernière%20mise%20à%20jour-'${CURRENT_DATE}'-blue?style=for-the-badge)' README.md
          fi

      - name: Commit Changes
        if: steps.changes.outputs.has-changes == 'true'
        run: |
          git add CHANGELOG.md README.md
          git commit -m "docs: mise à jour automatique du changelog [skip-changelog]"
          git push origin main

      - name: Create Release
        if: steps.changes.outputs.has-changes == 'true' && github.event.inputs.version != ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
