services:
  frontend:
    container_name: mspr3-frontend
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - mspr3-network

  backend:
    container_name: mspr3-backend
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - mspr3-network

  ai-api:
    container_name: mspr3-ai
    build:
      context: ./ai-api
      dockerfile: ai.dockerfile
    ports:
      - "8000:80"
    volumes:
      - ./ai-api:/code
    environment:
      - PYTHONUNBUFFERED=1
      - DEBUG=1
    restart: unless-stopped
    depends_on:
      - backend
      - db
    networks:
      - mspr3-network

  db:
    container_name: mspr3-db
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - mspr3-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - mspr3-network

volumes:
  mspr3-db-data:

networks:
  mspr3-network:
    driver: bridge
