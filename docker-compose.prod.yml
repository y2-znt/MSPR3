services:
  frontend:
    container_name: mspr3-frontend-prod
    image: ${DOCKERHUB_USERNAME}/mspr3-frontend:1.0.0
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs:ro
    environment:
      - NODE_ENV=production
      - SERVER_NAME=${SERVER_NAME}
    restart: always
    networks:
      - mspr3-network

  backend:
    container_name: mspr3-backend-prod
    image: ${DOCKERHUB_USERNAME}/mspr3-backend:1.0.0
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    restart: always
    networks:
      - mspr3-network

  ai-api:
    container_name: mspr3-ai-prod
    image: ${DOCKERHUB_USERNAME}/mspr3-ai-api:1.0.0
    environment:
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - HEALTH_CHECK_URL=${HEALTH_CHECK_URL}
    restart: always
    networks:
      - mspr3-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  db:
    container_name: mspr3-db-prod
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - mspr3-db-data:/var/lib/postgresql/data
    networks:
      - mspr3-network
    restart: always

volumes:
  mspr3-db-data:

networks:
  mspr3-network:
    driver: bridge
