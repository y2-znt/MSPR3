services:
  frontend:
    container_name: mspr3-frontend-prod
    build:
      context: ./frontend
      dockerfile: frontend.prod.dockerfile
    ports:
      - "4200:80"
    restart: always
    depends_on:
      - backend
    networks:
      - mspr3-network

  backend:
    container_name: mspr3-backend-prod
    build:
      context: ./backend
      dockerfile: backend.prod.dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    restart: always
    depends_on:
      - db
    networks:
      - mspr3-network

  ai-api:
    container_name: mspr3-ai-prod
    build:
      context: ./ai-api
      dockerfile: ai.prod.dockerfile
    ports:
      - "8000:80"
    restart: always
    depends_on:
      - backend
      - db
    networks:
      - mspr3-network

  db:
    container_name: mspr3-db-prod
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
    networks:
      - mspr3-network
    restart: always

volumes:
  pgdata_prod:
    name: mspr3-pgdata-prod

networks:
  mspr3-network:
    driver: bridge
